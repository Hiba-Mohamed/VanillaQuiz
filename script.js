const questions = [
  {
    question: "ูุง ูู ุงููุฎุฑุฌ ุงูุฎุงุต ุจุญุฑู ุงูุถุงุฏุ",
    options: [
      "ุทุฑู ุงููุณุงู ูุน ุงูุฃุณูุงู ุงูุนููุง.",
      "ุฌุงูุจ ุงููุณุงู ูุน ุงูุฃุถุฑุงุณ ุงูุนููุง.",
      "ูุณุท ุงููุณุงู ูุน ุงูุญูู.",
      "ูุงุนุฏุฉ ุงูุญูู.",
    ],
    answer: "ุฌุงูุจ ุงููุณุงู ูุน ุงูุฃุถุฑุงุณ ุงูุนููุง.",
    explanation:
      "ูุชููุฒ ุญุฑู ุงูุถุงุฏ ุจุฎุฑูุฌู ูู ุฌุงูุจ ุงููุณุงู ุงูููุงูุณ ููุฃุถุฑุงุณ ุงูุนููุง.",
  },
  {
    question: "ูุง ูู ุงูุตูุฉ ุงููุฑูุฏุฉ ูุญุฑู ุงูุถุงุฏุ",
    options: ["ุงูุฅุทุจุงู.", "ุงูุงุณุชุทุงูุฉ.", "ุงูุฑุฎุงูุฉ.", "ุงูุฌูุฑ."],
    answer: "ุงูุงุณุชุทุงูุฉ.",
    explanation: "ุตูุฉ ุงูุงุณุชุทุงูุฉ ุชููุฒ ุญุฑู ุงูุถุงุฏ ุนู ุจุงูู ุงูุญุฑูู.",
  },
  {
    question: "ูุชู ูุญุฏุซ ุฅุฏุบุงู ุงูููู ุงูุณุงููุฉุ",
    options: [
      "ุนูุฏูุง ุชุฃุชู ุงูููู ุงูุณุงููุฉ ูู ุจุฏุงูุฉ ุงููููุฉ.",
      "ุนูุฏูุง ุชุฃุชู ุงูููู ุงูุณุงููุฉ ุจุนุฏ ุญุฑู ููู ุณุงููุฉ.",
      "ุนูุฏูุง ุชุฃุชู ุงูููู ุงูุณุงููุฉ ูุจู ููู ูุชุญุฑูุฉ.",
      "ุนูุฏูุง ุชุฃุชู ุงูููู ุงูุณุงููุฉ ูู ููุงูุฉ ุงููููุฉ.",
    ],
    answer: "ุนูุฏูุง ุชุฃุชู ุงูููู ุงูุณุงููุฉ ูุจู ููู ูุชุญุฑูุฉ.",
    explanation:
      "ุฅุฏุบุงู ุงูููู ุงูุณุงููุฉ ูู ุงูููู ุงููุชุญุฑูุฉ ูุญุฏุซ ุนูุฏ ุงูุชูุงุก ููู ุณุงููุฉ ูุน ููู ูุชุญุฑูุฉุ ููุชู ุงูุฅุฏุบุงู ูุน ุบูุฉ.",
  },
  {
    question: "ูุชู ูุญุฏุซ ุงูุฅุฎูุงุก ุงูุดููู ูููููุ",
    options: [
      "ุนูุฏูุง ุชุฃุชู ุงูููู ุงูุณุงููุฉ ูุจู ุญุฑู ุงููุงุก.",
      "ุนูุฏูุง ุชุฃุชู ุงูููู ุงูุณุงููุฉ ูุจู ุญุฑู ุงูุจุงุก.",
      "ุนูุฏูุง ุชุฃุชู ุงูููู ุงูุณุงููุฉ ูุจู ุญุฑู ุงูููู.",
      "ุนูุฏูุง ุชุฃุชู ุงูููู ุงูุณุงููุฉ ูุจู ุญุฑู ุงููุงู.",
    ],
    answer: "ุนูุฏูุง ุชุฃุชู ุงูููู ุงูุณุงููุฉ ูุจู ุญุฑู ุงูุจุงุก.",
    explanation:
      "ุงูุฅุฎูุงุก ุงูุดููู ูุญุฏุซ ุนูุฏูุง ุชุฃุชู ุงูููู ุงูุณุงููุฉ ูุจู ุญุฑู ุงูุจุงุกุ ุญูุซ ูุชู ุงูุฅุฎูุงุก ุจูุฏุฑ ูุง ูุณูุญ ุจู ุงูุตูุช ูุน ุฎุฑูุฌ ุงูุดูุงู.",
  },
  {
    question: "ูุชู ุชูููุฎููู ุงูุฑุงุกุ",
    options: [
      "ุฅุฐุง ูุงูุช ูุถูููุฉ ุฃู ููุชูุญุฉ.",
      "ุฅุฐุง ูุงูุช ุจุนุฏ ุญุฑู ูุณุชุนูู ูุถููู.",
      "ุฅุฐุง ูุงูุช ุณุงููุฉ ุจุนุฏ ูุณุฑุฉ ุนุงุฑุถุฉ.",
      "ุฅุฐุง ูุงูุช ูู ููุงูุฉ ุงููููุฉ.",
    ],
    answer: "ุฅุฐุง ูุงูุช ูุถูููุฉ ุฃู ููุชูุญุฉ.",
    explanation: "ุชูููุฎููู ุงูุฑุงุก ุฅุฐุง ูุงูุช ูุถูููุฉ ุฃู ููุชูุญุฉ .",
  },
  {
    question: "ูุง ูู ุฃุญูุงู ุงูููู ุงูุณุงููุฉุ",
    options: [
      "ุงูุฅุฎูุงุกุ ุงูุฅุฏุบุงูุ ุงูุฅุธูุงุฑ.",
      "ุงูุฅุฎูุงุกุ ุงูุฅุฏุบุงูุ ุงูุชุฌููุฏ.",
      "ุงูุฅุธูุงุฑุ ุงูุฅุฎูุงุกุ ุงูุชุณููู.",
      "ุงูุฅุฏุบุงูุ ุงูุชุณูููุ ุงูุฅุธูุงุฑ.",
    ],
    answer: "ุงูุฅุฎูุงุกุ ุงูุฅุฏุบุงูุ ุงูุฅุธูุงุฑ.",
    explanation: "ุฃุญูุงู ุงูููู ุงูุณุงููุฉ ูู ุงูุฅุฎูุงุกุ ุงูุฅุฏุบุงูุ ูุงูุฅุธูุงุฑ.",
  },
  {
    question: "ูุง ูู ุฃููุงุน ุงูุบูุฉุ",
    options: [
      "ุบูุฉ ูุงูุตุฉุ ุบูุฉ ูุงููุฉุ ุบูุฉ ุฃููู ูุง ุชูููุ ุบูุฉ ุงููุต ูุง ุชููู.",
      "ุบูุฉ ุฎูููุฉุ ุบูุฉ ุดุฏูุฏุฉุ ุบูุฉ ูุณุชุชุฑุฉ.",
      "ุบูุฉ ุฌูุฑูุฉุ ุบูุฉ ููููุณุฉ.",
      "ุบูุฉ ูุงุถุญุฉุ ุบูุฉ ุฎููุฉ.",
    ],
    answer: "ุบูุฉ ูุงูุตุฉุ ุบูุฉ ูุงููุฉุ ุบูุฉ ุฃููู ูุง ุชูููุ ุบูุฉ ุงููุต ูุง ุชููู.",
    explanation: `ุฃููุงุน ุงูุบูุฉ ูู: 
    - ุบูุฉ ุฃููู ูุง ุชููู: ูู ุงูููู ูุงูููู ุงููุดุฏุฏุชูู.
    - ุบูุฉ ูุงููุฉ: ุชููู ูู ุงูููู ู ุงูููู ุงููุฎูุงุชูู.
    - ุบูุฉ ูุงูุตุฉ: ุชููู ูู ุงูููู ู ุงูููู ุงูุณุงููุชูู  ุงููุธูุฑุชูู. 
    - ุบูุฉ ุงููุต ูุง ุชููู: ูู ุญุงูุฉ ุงูููู ู ุงูููู ุงููุชุญุฑูุชูู.`,
  },
  {
    question: "ูุง ูู ุงููุฎุฑุฌ ุงูุฎุงุต ุจุญุฑู ุงูุธุงุกุ",
    options: [
      "ุทุฑู ุงููุณุงู ูุน ุฃุทุฑุงู ุงูุซูุงูุง ุงูุนููุง.",
      "ุฌุงูุจ ุงููุณุงู ูุน ุงูุฃุถุฑุงุณ ุงูุนููุง.",
      "ูุณุท ุงููุณุงู ูุน ุงูุญูู.",
      "ูุงุนุฏุฉ ุงูุญูู.",
    ],
    answer: "ุทุฑู ุงููุณุงู ูุน ุฃุทุฑุงู ุงูุซูุงูุง ุงูุนููุง.",
    explanation: "ูุฎุฑุฌ ุญุฑู ุงูุธุงุก ูู ุทุฑู ุงููุณุงู ูุน ุฃุทุฑุงู ุงูุซูุงูุง ุงูุนููุง.",
  },
  {
    question: "ูุง ูู ุงูุตูุฉ ุงููุดุชุฑูุฉ ุจูู ุงูุถุงุฏ ูุงูุธุงุกุ",
    options: ["ุงูุฅููุชุงุญ.", "ุงูุงุณุชุนูุงุก.", "ุงูุชูุดู.", "ุงูุงุณุชุทุงูุฉ."],
    answer: "ุงูุงุณุชุนูุงุก.",
    explanation:
      "ุงูุถุงุฏ ูุงูุธุงุก ูุดุชุฑูุงู ูู ุงูุตูุงุช ุงูุฌูุฑูุฉุ ุงูุฑุฎุงูุฉุ ุงูุงุณุชุนูุงุกุ ุงูุฅุทุจุงูุ ูุงูุฅุตูุงุช.",
  },
  {
    question: "ูุง ูู ููุน ุงูุบูุฉ ูู ุงูููู ูุงูููู ุงููุดุฏุฏุชููุ",
    options: [
      "ุบูุฉ ุฃููู ูุง ุชููู ูุตูุงู ูููููุง.",
      "ุบูุฉ ูุงููุฉ.",
      "ุบูุฉ ูุงูุตุฉ.",
      "ุบูุฉ ุงููุต ูุง ุชููู.",
    ],
    answer: "ุบูุฉ ุฃููู ูุง ุชููู ูุตูุงู ูููููุง.",
    explanation:
      "ุงูููู ูุงูููู ุงููุดุฏุฏุชุงู ุชููุทูุงู ุจุบูุฉ ุฃููู ูุง ุชููู ุณูุงุก ูู ุญุงูุฉ ุงููุตู ุฃู ุงููููุ ูุชุฎุฑุฌ ุงูุบูุฉ ูู ุงูุฎูุดูู ุจููุฏุงุฑ ุญุฑูุชูู.",
  },
];

let currentQuestionIndex = 0;
let score = 0;

const questionText = document.getElementById("question-text");
const optionsContainer = document.getElementById("options-container");
const questionIndex = document.getElementById("question-index");
const totalQuestions = document.getElementById("total-questions");
const form = document.getElementById("question-form");
const resultContainer = document.getElementById("result");
const correctAnswerText = document.getElementById("correct-answer");
const userAnswerText = document.getElementById("user-answer");
const answerStatus = document.getElementById("answer-status");
const finalResultContainer = document.getElementById("final-result");
const scoreText = document.getElementById("score");
const totalScoreText = document.getElementById("total-score");

function loadQuestion() {
  if (currentQuestionIndex < questions.length) {
    const question = questions[currentQuestionIndex];
    questionText.textContent = question.question;
    questionIndex.textContent = currentQuestionIndex + 1;
    totalQuestions.textContent = questions.length;

    optionsContainer.innerHTML = "";
    question.options.forEach((option) => {
      const label = document.createElement("label");
      label.innerHTML = `
        <input type="radio" name="answer" value="${option}" required>
        ${option}
      `;
      optionsContainer.appendChild(label);
    });
  } else {
    showFinalResult();
  }
}

function handleFormSubmit(event) {
  event.preventDefault();
  const userAnswer = form.answer.value;
  const correctAnswer = questions[currentQuestionIndex].answer;

  const isCorrect = userAnswer === correctAnswer;

  // Update correct answer div
  const correctAnswerText = document.getElementById("correct-answer");
  correctAnswerText.textContent = correctAnswer;

  // Update user answer div
  const userAnswerText = document.getElementById("user-answer");
  userAnswerText.textContent = userAnswer;

  const answerStatus = document.getElementById("answer-status");
  const userAnswerDiv = document.getElementById("user-answer-div");
  if (isCorrect) {
    answerStatus.textContent = "ุตุญูุญุฉ";
    userAnswerDiv.classList.add("correct");
    userAnswerDiv.classList.remove("wrong");
    score++;
    console.log(score);
  } else {
    answerStatus.textContent = "ุฎุงุทุฆุฉ";
    userAnswerDiv.classList.add("wrong");
    userAnswerDiv.classList.remove("correct");
  }

  // Display explanation
  const explanationDiv = document.getElementById("explanation");
  explanationDiv.textContent = `ุงูุดุฑุญ: ${questions[currentQuestionIndex].explanation}`;

  // Show result container and manage next question button
  const resultContainer = document.getElementById("result");
  resultContainer.style.display = "block";
  form.style.display = "none";

  const nextQuestionButton = document.getElementById("next-question");
  nextQuestionButton.style.display = "block";
  nextQuestionButton.onclick = () => {
    currentQuestionIndex++;
    resultContainer.style.display = "none";
    nextQuestionButton.style.display = "none";
    form.style.display = "block";
    loadQuestion();
  };
}

function retryQuiz() {
  currentQuestionIndex = 0;
  score = 0;
  finalResultContainer.style.display = "none";
  document.getElementById("question-container").style.display = "block";
  resultContainer.style.display = "none";
  loadQuestion();
}

function showFinalResult() {
  const totalScore = questions.length;
  const percentage = (score / totalScore) * 100;

  // Update score and total score
  document.getElementById("score").textContent = score;
  document.getElementById("total-score").textContent = totalScore;
  document.getElementById("percentage").textContent = `${percentage}%`;

  // Get the final message container
  const finalMessage = document.getElementById("final-message");

  if (percentage >= 80) {
    finalMessage.textContent = "๐ ุฑุงุฆุน ุฌุฏูุง! ููุฏ ุฃุจุฏุนุช! ุงุณุชูุฑ ูู ุงูุชููุฒ! ๐";
    finalMessage.className = "celebration";
  } else {
    finalMessage.textContent =
      "ูุง ุจุฃุณ! ุญุงูู ูุฑุฉ ุฃุฎุฑูุ ูุณุชุชุญุณู! ุงูุชูุฏู ุงููุณุชูุฑ ูู ุงูุฃูู. ๐ช";
    finalMessage.className = "encouragement";
  }

  // Show final result container
  document.getElementById("final-result").style.display = "block";
  document.getElementById("question-container").style.display = "none";
}
function showNextQuestion() {
  const quizContainer = document.querySelector(".quiz-container");

  // Add the zoom-in animation class
  quizContainer.classList.add("zoom-in");

  // Wait for the animation to complete, then remove the class
  setTimeout(() => {
    quizContainer.classList.remove("zoom-in");

    // Update the question content here
    const questionText = document.getElementById("question-text");
  }, 800); // Match the duration of the animation (800ms)
}
const nextQuestionButton = document.getElementById("next-question");

nextQuestionButton.addEventListener("click", showNextQuestion);

form.addEventListener("submit", handleFormSubmit);
loadQuestion();
