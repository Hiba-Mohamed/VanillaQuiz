const questions = [
  {
    question: "ูุง ุงูุญุงูุงุช ุงูุชู ุชูููุฎููู ูููุง ุงูุฑุงุก ุงูุณุงููุฉุ",
    options: [
      "ุฅุฐุง ูุงูุช ุจุนุฏ ุญุฑู ููุณูุฑ.",
      "ุฅุฐุง ูุงูุช ุจุนุฏ ุญุฑู ูุถููู ุฃู ููุชูุญ.",
      "ุฅุฐุง ูุงูุช ุจุนุฏ ูุงุก ุณุงููุฉ.",
      "ุฅุฐุง ูุงูุช ูู ููุงูุฉ ุงููููุฉ.",
    ],
    answer: "ุฅุฐุง ูุงูุช ุจุนุฏ ุญุฑู ูุถููู ุฃู ููุชูุญ.",
    explanation: "ุงูุฑุงุก ุชูููุฎููู ุฅุฐุง ูุงูุช ุณุงููุฉ ูุณุจููุง ุญุฑู ูุถููู ุฃู ููุชูุญ.",
  },
  {
    question: "ูุชู ุชูุฑููููู ุงูุฑุงุก ุงูุณุงููุฉุ",
    options: [
      "ุฅุฐุง ุณุจูุชูุง ูุณุฑุฉ ุฃุตููุฉ ูุจุงุดุฑุฉ.",
      "ุฅุฐุง ูุงูุช ุจุนุฏ ุญุฑู ูุณุชุนูู ูุถููู.",
      "ุฅุฐุง ูุงูุช ูู ููุงูุฉ ุงููููุฉ.",
      "ุฅุฐุง ุณุจูุชูุง ูุชุญุฉ.",
    ],
    answer: "ุฅุฐุง ุณุจูุชูุง ูุณุฑุฉ ุฃุตููุฉ ูุจุงุดุฑุฉ.",
    explanation:
      "ุชูุฑููููู ุงูุฑุงุก ุงูุณุงููุฉ ุฅุฐุง ุณุจููุง ูุณุฑุฉ ุฃุตููุฉ ูุจุงุดุฑุฉ ูุซู 'ูุฑููู'.",
  },
  {
    question: "ูุง ุงูุญูู ูู ุงูููู ุนูู ูููุฉ 'ููุตุฑู'ุ",
    options: [
      "ุงูุชูุฎูู ููุท.",
      "ุงูุชุฑููู ููุท.",
      "ุงูุชูุฎูู ูุงูุชุฑููู ุฌุงุฆุฒ ุญุณุจ ุงููุฑุงุกุฉ.",
      "ุงูุฅูุงูุฉ ููุท.",
    ],
    answer: "ุงูุชูุฎูู ูุงูุชุฑููู ุฌุงุฆุฒ ุญุณุจ ุงููุฑุงุกุฉ.",
    explanation:
      "ูู ูููุฉ 'ููุตุฑู'ุ ูุฌูุฒ ุงูุชูุฎูู ุฃู ุงูุชุฑููู ุญุณุจ ุงููุฑุงุกุงุช ุงููุฎุชููุฉ.",
  },
  {
    question: "ูุชู ุชูููุฎููู ูุงู ููุธ ุงูุฌูุงูุฉุ",
    options: [
      "ุฅุฐุง ุณุจูุชูุง ูุชุญุฉ ุฃู ุถูุฉ.",
      "ุฅุฐุง ุณุจูุชูุง ูุณุฑุฉ.",
      "ูู ุฌููุน ุงูุญุงูุงุช.",
      "ุฅุฐุง ูุงูุช ูู ุจุฏุงูุฉ ุงููููุฉ.",
    ],
    answer: "ุฅุฐุง ุณุจูุชูุง ูุชุญุฉ ุฃู ุถูุฉ.",
    explanation:
      "ุชูููุฎููู ูุงู ููุธ ุงูุฌูุงูุฉ ุฅุฐุง ุณุจูุชูุง ูุชุญุฉ ุฃู ุถูุฉ ูุซู 'ูุงูู ุงููู' ุฃู 'ุฑูุณููู ุงููู'.",
  },
  {
    question: "ูุง ุงููุฑู ุจูู ุงูุฅุทุจุงู ูุงูุงุณุชุนูุงุกุ",
    options: [
      "ุงูุฅุทุจุงู ุตูุฉ ูุญุฑูู ุงูุชูุฎูู ููุท.",
      "ุงูุฅุทุจุงู ุตูุฉ ุฎุงุตุฉ ุจุญุฑูู ุงูุฅุทุจุงู ููุทุ ุจูููุง ุงูุงุณุชุนูุงุก ูุดูู ุฌููุน ุงูุญุฑูู ุงููุณุชุนููุฉ.",
      "ูุง ููุฌุฏ ูุฑู ุจููููุง.",
      "ุงูุฅุทุจุงู ูุนูู ุงูุชูุงุก ุทุฑูู ุงููู.",
    ],
    answer:
      "ุงูุฅุทุจุงู ุตูุฉ ุฎุงุตุฉ ุจุญุฑูู ุงูุฅุทุจุงู ููุทุ ุจูููุง ุงูุงุณุชุนูุงุก ูุดูู ุฌููุน ุงูุญุฑูู ุงููุณุชุนููุฉ.",
    explanation:
      "ุงูุฅุทุจุงู ุตูุฉ ุฎุงุตุฉ ุจุงูุตุงุฏุ ุงูุถุงุฏุ ุงูุทุงุกุ ุงูุธุงุกุ ุฃูุง ุงูุงุณุชุนูุงุก ููุดูู ูู ุงูุญุฑูู ุงููุณุชุนููุฉ.",
  },
  {
    question: "ูุง ุญูู ุชูุฎูู ุงูุฑุงุก ุฅุฐุง ูุงูุช ููุณูุฑุฉุ",
    options: [
      "ุชูุฑููููู ุฏุงุฆููุง.",
      "ุชูููุฎููู ุฏุงุฆููุง.",
      "ุชูููุฎููู ูู ุจุนุถ ุงูุญุงูุงุช.",
      "ุชูุฑููููู ุฅุฐุง ุณุจูุชูุง ูุงุก.",
    ],
    answer: "ุชูุฑููููู ุฏุงุฆููุง.",
    explanation: "ุงูุฑุงุก ุงูููุณูุฑุฉ ุชูุฑููููู ุฏุงุฆููุง ูุซู 'ุฑููุงุญ'.",
  },
  {
    question: "ูุชู ุชูุฑููููู ุงูุฑุงุก ูู ุขุฎุฑ ุงููููุฉุ",
    options: [
      "ุฅุฐุง ูุงูุช ุณุงููุฉ ูุณุจููุง ุญุฑู ููุณูุฑ.",
      "ุฅุฐุง ูุงูุช ููุชูุญุฉ.",
      "ุฅุฐุง ูุงูุช ูุถูููุฉ.",
      "ุฅุฐุง ูุงูุช ุจุนุฏ ุญุฑู ุงุณุชุนูุงุก.",
    ],
    answer: "ุฅุฐุง ูุงูุช ุณุงููุฉ ูุณุจููุง ุญุฑู ููุณูุฑ.",
    explanation: "ุงูุฑุงุก ุชูุฑููููู ุฅุฐุง ูุงูุช ุณุงููุฉ ูุณุจููุง ุญุฑู ููุณูุฑ ูุซู 'ููุฑู'.",
  },
  {
    question: "ูุง ุญูู ุชูุฎูู ุงูุฑุงุก ูู ูููุฉ 'ููุฑููููู' ุนูุฏ ุงููููุ",
    options: [
      "ุชูููุฎููู ุฏุงุฆููุง.",
      "ุชูุฑููููู ุฏุงุฆููุง.",
      "ูุฌูุฒ ุงูุชูุฎูู ุฃู ุงูุชุฑููู.",
      "ุชูููุฎููู ุฅุฐุง ุณุจูุชูุง ูุชุญุฉ.",
    ],
    answer: "ุชูููุฎููู ุฏุงุฆููุง.",
    explanation:
      "ุงูุฑุงุก ุชูููุฎููู ุนูุฏ ุงูููู ูู ูููุฉ 'ููุฑููููู' ูุฃููุง ุณุงููุฉ ููุจููุง ุญุฑู ููุชูุญ.",
  },
  {
    question: "ูุง ุงูุฃุญุฑู ุงูุชู ุชูููุฎููู ุฏุงุฆููุงุ",
    options: [
      "ุญุฑูู ุงูุงุณุชุนูุงุก.",
      "ุญุฑูู ุงูุงุณุชูุงู.",
      "ุญุฑูู ุงูุฅุทุจุงู ููุท.",
      "ุงูุญุฑูู ุงููุฑููุฉ.",
    ],
    answer: "ุญุฑูู ุงูุงุณุชุนูุงุก.",
    explanation:
      "ุญุฑูู ุงูุงุณุชุนูุงุก (ุฎุ ุตุ ุถุ ุทุ ุธุ ุบุ ู) ุชูููุฎููู ุฏุงุฆููุง ุฅูุง ุฅุฐุง ูุงูุช ููุณูุฑุฉ.",
  },
  {
    question: "ูุง ุงูุญูู ูู ุชูุฎูู ุงูุฑุงุก ูู ูููุฉ 'ูุฑุนูู'ุ",
    options: [
      "ุชูููุฎููู ุฏุงุฆููุง.",
      "ุชูุฑููููู ุฏุงุฆููุง.",
      "ุชูููุฎููู ุฅุฐุง ููุนุช ูู ุจุฏุงูุฉ ุงููููุฉ.",
      "ุชูุฑููููู ุฅุฐุง ูุงูุช ููุณูุฑุฉ.",
    ],
    answer: "ุชูุฑููููู ุฏุงุฆููุง.",
    explanation:
      "ุงูุฑุงุก ุชุฑูู ูู 'ูุฑุนูู' ูุฃููุง ุณุงููุฉ ูุณุจููุง ุญุฑู ููุณูุฑ.",
  },
];

let currentQuestionIndex = 0;
let score = 0;

const questionText = document.getElementById("question-text");
const optionsContainer = document.getElementById("options-container");
const questionIndex = document.getElementById("question-index");
const totalQuestions = document.getElementById("total-questions");
const form = document.getElementById("question-form");
const resultContainer = document.getElementById("result");
const correctAnswerText = document.getElementById("correct-answer");
const userAnswerText = document.getElementById("user-answer");
const answerStatus = document.getElementById("answer-status");
const finalResultContainer = document.getElementById("final-result");
const scoreText = document.getElementById("score");
const totalScoreText = document.getElementById("total-score");

function loadQuestion() {
  if (currentQuestionIndex < questions.length) {
    const question = questions[currentQuestionIndex];
    questionText.textContent = question.question;
    questionIndex.textContent = currentQuestionIndex + 1;
    totalQuestions.textContent = questions.length;

    optionsContainer.innerHTML = "";
    question.options.forEach((option) => {
      const label = document.createElement("label");
      label.innerHTML = `
        <input type="radio" name="answer" value="${option}" required>
        ${option}
      `;
      optionsContainer.appendChild(label);
    });
  } else {
    showFinalResult();
  }
}

function handleFormSubmit(event) {
  event.preventDefault();
  const userAnswer = form.answer.value;
  const correctAnswer = questions[currentQuestionIndex].answer;

  const isCorrect = userAnswer === correctAnswer;

  // Update correct answer div
  const correctAnswerText = document.getElementById("correct-answer");
  correctAnswerText.textContent = correctAnswer;

  // Update user answer div
  const userAnswerText = document.getElementById("user-answer");
  userAnswerText.textContent = userAnswer;

  const answerStatus = document.getElementById("answer-status");
  const userAnswerDiv = document.getElementById("user-answer-div");
  if (isCorrect) {
    answerStatus.textContent = "ุตุญูุญุฉ";
    userAnswerDiv.classList.add("correct");
    userAnswerDiv.classList.remove("wrong");
    score++;
    console.log(score);
  } else {
    answerStatus.textContent = "ุฎุงุทุฆุฉ";
    userAnswerDiv.classList.add("wrong");
    userAnswerDiv.classList.remove("correct");
  }

  // Display explanation
  const explanationDiv = document.getElementById("explanation");
  explanationDiv.textContent = `ุงูุดุฑุญ: ${questions[currentQuestionIndex].explanation}`;

  // Show result container and manage next question button
  const resultContainer = document.getElementById("result");
  resultContainer.style.display = "block";
  form.style.display = "none";

  const nextQuestionButton = document.getElementById("next-question");
  nextQuestionButton.style.display = "block";
  nextQuestionButton.onclick = () => {
    currentQuestionIndex++;
    resultContainer.style.display = "none";
    nextQuestionButton.style.display = "none";
    form.style.display = "block";
    loadQuestion();
  };
}

function retryQuiz() {
  currentQuestionIndex = 0;
  score = 0;
  finalResultContainer.style.display = "none";
  document.getElementById("question-container").style.display = "block";
  resultContainer.style.display = "none";
  loadQuestion();
}

function showFinalResult() {
  const totalScore = questions.length;
  const percentage = (score / totalScore) * 100;

  // Update score and total score
  document.getElementById("score").textContent = score;
  document.getElementById("total-score").textContent = totalScore;

  // Get the final message container
  const finalMessage = document.getElementById("final-message");

  if (percentage >= 80) {
    finalMessage.textContent = "๐ ุฑุงุฆุน ุฌุฏูุง! ููุฏ ุฃุจุฏุนุช! ุงุณุชูุฑ ูู ุงูุชููุฒ! ๐";
    finalMessage.className = "celebration";
  } else {
    finalMessage.textContent =
      "ูุง ุจุฃุณ! ุญุงูู ูุฑุฉ ุฃุฎุฑูุ ูุณุชุชุญุณู! ุงูุชูุฏู ุงููุณุชูุฑ ูู ุงูุฃูู. ๐ช";
    finalMessage.className = "encouragement";
  }

  // Show final result container
  document.getElementById("final-result").style.display = "block";
  document.getElementById("question-container").style.display = "none";
}
function showNextQuestion() {
  const quizContainer = document.querySelector(".quiz-container");

  // Add the zoom-in animation class
  quizContainer.classList.add("zoom-in");

  // Wait for the animation to complete, then remove the class
  setTimeout(() => {
    quizContainer.classList.remove("zoom-in");

    // Update the question content here
    const questionText = document.getElementById("question-text");
  }, 800); // Match the duration of the animation (800ms)
}
  const nextQuestionButton = document.getElementById("next-question");

nextQuestionButton
  .addEventListener("click", showNextQuestion);


form.addEventListener("submit", handleFormSubmit);
loadQuestion();
